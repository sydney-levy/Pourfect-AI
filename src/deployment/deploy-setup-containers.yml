- name: Configure containers on app server
  hosts: appserver
  connection: ssh
  become: true

  tasks:
    # Setup secrets so containers can have access to GCP resources 
    - name: Create secrets directory
      file:
        path: "/srv/secrets"
        state: "directory"
        mode: 0755
    - name: Copy service account key file
      copy:
        src: ../secrets/gcp-service.json
        dest: "/srv/secrets/gcp-service.json"
        mode: 0644
    - name: Authenticate gcloud using service account
      shell: "gcloud auth activate-service-account --key-file /srv/secrets/gcp-service.json"
    
    # Create common network for all containers
    - name: Create network
      docker_network:
          name: "{{docker_network_name}}"
          driver: "bridge"
          attachable: "yes"

    - name: Copy docker tag file
      copy:
        src: .docker-tag
        dest: .docker-tag
        mode: 0644
    - name: "Get docker tag"
      shell: "cat .docker-tag"
      register: tag
    - name: Print tag
      debug:
        var: tag
    - name: Create frontend container
      docker_container:
        name: "frontend"
        image: "gcr.io/{{ gcp_project }}/pourfect-app-frontend-simple:{{ tag.stdout}}"
        state: started
        recreate: yes
        pull: yes
        restart: yes
        published_ports:
          - 3000:3000
        networks:
          - name: "{{docker_network_name}}"

    # Create a folder on persistent disk
    - name: Create persistent directory
      file:
        path: "/mnt/disk-1/persistent"
        state: "directory"
        mode: 0777
    - name: Create chromadb directory
      file:
        path: "/mnt/disk-1/chromadb"
        state: "directory"
        mode: 0777

    - name: Create vector-db container
      docker_container:
        name: "vector-db"
        image: "chromadb/chroma:0.5.7"
        state: started
        recreate: yes
        published_ports:
          - 8000:8000
        env:
          IS_PERSISTENT: "TRUE"
          ANONYMIZED_TELEMETRY: "FALSE"
        networks:
          - name: "{{docker_network_name}}"
        volumes:
          - /mnt/disk-1/chromadb:/chroma/chroma

    - name: Load Vector DB
      shell: docker run --rm -it -e GCP_PROJECT="{{ gcp_project }}" -e CHROMADB_HOST="vector-db" -e CHROMADB_PORT="8000" -e GOOGLE_APPLICATION_CREDENTIALS="/secrets/gcp-service.json" -v /srv/secrets:/secrets --network "{{docker_network_name}}" "gcr.io/{{ gcp_project }}/pourfect-app-vector-db-cli:{{ tag.stdout}}" preprocess_rag.py

    - name: Create api-service container
      docker_container:
        name: "api-service"
        image: "gcr.io/{{ gcp_project }}/pourfect-app-api-service:{{ tag.stdout}}"
        state: started
        recreate: yes
        published_ports:
          - 9000:9000
        env:
          GOOGLE_APPLICATION_CREDENTIALS: "/secrets/gcp-service.json"
          GCP_PROJECT: "{{ gcp_project }}"
          GCS_BUCKET_NAME: "pourfect-app-models"
          CHROMADB_HOST: "vector-db"
          CHROMADB_PORT: "8000"
        networks:
          - name: "{{docker_network_name}}"
        volumes:
          - /mnt/disk-1/persistent:/persistent
          - /srv/secrets:/secrets
  
    - name: Check if containers are running
      shell: docker ps
    
    - name: "Remove all unused containers"
      shell: docker system prune -a -f